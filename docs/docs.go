// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/bulk/create": {
            "post": {
                "description": "Creates all the resources passed via request body.",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk API"
                ],
                "summary": "Creates all the resources passed via request body.",
                "parameters": [
                    {
                        "description": "body_param",
                        "name": "body_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sample result: \"{\\\"message\\\":\\\"k8s resources have been created successfully\\\",\\\"status\\\":201}"
                    }
                }
            }
        },
        "/api/v1/daemonset/list": {
            "get": {
                "description": "Gets the list of the daemonsets in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daemonsets"
                ],
                "summary": "Gets the list of the Daemonsets in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "daemonset search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search daemonset by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return daemonset result by name with details",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"daemonsets\\\":[],\\\"namespace\\\":\\\"default\\\",\\\"number_of_daemonsets\\\":0,\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/deployment/list": {
            "get": {
                "description": "Gets the list of the deployments in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "Gets the list of the deployments in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "deployment search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search deployment by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return deployment result by name with more details.",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"deployments\\\":[],\\\"namespace\\\":\\\"default\\\",\\\"number_of_deployments\\\":0,\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/job/list": {
            "get": {
                "description": "Gets the list of the job in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "Gets the list of the job in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "job search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search job by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return job result by name with more details.",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"jobs\\\":[],\\\"namespace\\\":\\\"default\\\",\\\"number_of_jobs\\\":0,\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/job/template/create": {
            "post": {
                "description": "Creates the jobs from the job template, currently the method only supports job with one container.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "Creates the jobs from the job template.",
                "parameters": [
                    {
                        "description": "body_param",
                        "name": "body_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UnstructuredCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sample result: \"{\\\"message\\\":\\\"job has been created successfully\\\",\\\"status\\\":201}"
                    }
                }
            }
        },
        "/api/v1/job/yaml/create": {
            "post": {
                "description": "Creates the jobs from the request body.",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Job"
                ],
                "summary": "Creates the jobs from the request body.",
                "parameters": [
                    {
                        "description": "body_param",
                        "name": "body_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sample result: \"{\\\"message\\\":\\\"job has been created successfully\\\",\\\"status\\\":201}"
                    }
                }
            }
        },
        "/api/v1/namespace/list": {
            "get": {
                "description": "Gets the list of the namespaces in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Namespace"
                ],
                "summary": "Gets the list of the namespaces in the k8s cluster.",
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"namespaces\\\":[],\\\"number_of_namespaces\\\":0,\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/node/list": {
            "get": {
                "description": "Gets the list of the nodes in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "Gets the list of the nodes in the k8s cluster.",
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"daemonsets\\\":[],\\\"namespace\\\":\\\"default\\\",\\\"number_of_daemonsets\\\":0,\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "description": "Fetch the current status of the application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Fetch the current status of the application.",
                "responses": {
                    "200": {
                        "description": "Sample result: {\\\"status\\\":\\\"alive\\\"}"
                    }
                }
            }
        },
        "/api/v1/pod/list": {
            "get": {
                "description": "Gets the list of the pods in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "Gets the list of the pods in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "pod search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search pod by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return pod result by name with more details.",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"namespace\\\":\\\"default\\\",\\\"number_of_pods\\\":0,\\\"pods\\\":[],\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/pod/template/create": {
            "post": {
                "description": "Creates the pods from the pod template, currently the method only supports pod with one container.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "Creates the pods from the pod template.",
                "parameters": [
                    {
                        "description": "body_param",
                        "name": "body_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UnstructuredCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sample result: \"{\\\"message\\\":\\\"pod has been created successfully\\\",\\\"status\\\":201}"
                    }
                }
            }
        },
        "/api/v1/pod/yaml/create": {
            "post": {
                "description": "Creates the pods from the request body.",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "Creates the pods from the request body.",
                "parameters": [
                    {
                        "description": "body_param",
                        "name": "body_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sample result: \"{\\\"message\\\":\\\"pod has been created successfully\\\",\\\"status\\\":201}"
                    }
                }
            }
        },
        "/api/v1/service/list": {
            "get": {
                "description": "Gets the list of the services in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Gets the list of the services in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "service search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search service by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return service result by name with more details.",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"namespace\\\":\\\"default\\\",\\\"number_of_services\\\":0,\\\"services\\\":[],\\\"status\\\":200}"
                    }
                }
            }
        },
        "/api/v1/statefulset/list": {
            "get": {
                "description": "Gets the list of the statefulsets in the k8s cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statefulsets"
                ],
                "summary": "Gets the list of the statefulsets in the k8s cluster.",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "statefulset search by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "search statefulset by label",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "return statefulset result by name with more details.",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sample result: \"{\\\"namespace\\\":\\\"default\\\",\\\"number_of_statefulsets\\\":0,\\\"statefulsets\\\":[],\\\"status\\\":200}"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.UnstructuredCreateRequest": {
            "type": "object",
            "required": [
                "commandParams",
                "namespace",
                "templateName"
            ],
            "properties": {
                "commandParams": {
                    "type": "string"
                },
                "cpuLimit": {
                    "type": "string"
                },
                "cpuRequest": {
                    "type": "string"
                },
                "memoryLimit": {
                    "type": "string"
                },
                "memoryRequest": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "testLabel": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
